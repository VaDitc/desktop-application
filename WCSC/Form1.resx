<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAFAAAAHQAAADEANlamGFZ80jBrjtlCfJ3gPnyh5TN3nuMlbJTdFlyF1gA2VqYAAAAyAAAAHgAA
        AAX///8AAAAAAwAAAA8AAAAZAV+PvaHl/v+a3vj/k9jz/2u83P9eu+D/Xcfv/17Q+v8BX4+9AAAAGQAA
        AA8AAAAD////AAAAAAAAFiAAAU50AAN1rnUDebSXA3m0lw9oktM+p9DsAFWAzAN5tJcDebSXA3WudQE4
        VAAAAAAAAAAAAP///wAAWocAAFaCGgBVgDMBYZEaA3exAAN2sAAdeqPZXtD6/wBVgMwDdrAAA4HAAAN5
        tAABOFQAAAAAAAAAAAD///8AAFuJlABah8YAWofGAFqHxgBbiZQAWYYAHnmj2V3L9P8AVYHMAFWBAAN2
        sQADcqoAAVyKAABBYQAALUQA////AAFmmLOi5vz/esjm/13G7v8BZpizAV6OAB96o9hdxu3/AFeDygBX
        gwAAV4MAAFaCAABVgAAAVoIAAFqHAP///wABaJuKAmqfrQN8uJMCap+tAWibigFomwAgeqTVXr/l/wBZ
        hscAWYYAAFqHAABWghoAVYAzAFaCGgBahwD///8AAFyJYgJmmGIDgcAAAmaYYgBciWIAXIkAIXym02C5
        3f8AXInDAFyKAABbiZQAWofGAFqHxgBah8YAW4mU////AAFdjBgBXo2nAV+PAAFejacBXYwYAV6NACV/
        qc9luNn/AV6NvgFikwABZpizoub8/3rI5v9dxu7/AWaYs////wABYJEAAWGSdQFhkosBYZJ1AWCRAAFh
        kgArha/LecXi/wFhkroCbKIAAmyihAJvpqYDfLiTAm+mpgJsooT///8AAWicAAFllxcBZZe1AWWXFwFo
        mwABZpgAMoy1yJLX8v8BZZe1AWWXAAFll1sCbaJbA4HAAAJtolsBZZdb////AAFpnYQBaJywAWicsAFo
        nHYBaZ1CAWmdEjSQucSZ3ff/AWicsAFonAABZ5oXAWicmgFpnQABaJyaAWeaF////wABaZ0AAWmdAAFr
        nx4CbKFfAm2ilQJtoqk0jrXJmt74/wJtoqkCcagAAm6kAAJsoWoCbaJ+AmyhagFrnwD///8AAWmdAAFp
        nQABa58AAm2iAAJupAACcKcANpO8wZ7i+/8BZZe1AnStXgJ2sDsCdK0cAnStngJ0rRQDe7cA////AAFp
        nQABaZ0AAWufAAJtogADcqoAA3u3ADigz6+l6f//A3u3lAN6tlMDe7eCA3u3lAN7t5QDe7eUA3y4bv//
        /wABT3YAATVPAAFrnwACbaIAA3+9AAN/vQADgL5pA4C/jAOAvmkDfrsAA3y5AAN8uQADfLkAA3y5AAN8
        uQD///8AAAEAAAABAADgDwAAjH8AAAR/AAAEfwAABGMAACRBAAAkQQAAjEEAAIxJAAAASQAAwGMAAPwD
        AAD8AQAA/H8AAA==
</value>
  </data>
</root>